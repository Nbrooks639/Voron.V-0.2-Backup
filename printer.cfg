# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.2 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include mainsail.cfg]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 3.0  ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 5.0  ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 100.0 ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 100.0 ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode:

[include macros.cfg]
[include pico-billy.cfg]
#[include adxl.cfg]
[include timelapse.cfg]
[exclude_object]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571278F1088-if00
#serial: /dev/ttyAMA0 											# for UART connection
restart_method: command


[temperature_sensor SkR_PiCo]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 80

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 2200
max_accel_to_decel: 1500
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
dir_pin: gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 112
position_max: 112
homing_speed: 38                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
diag_pin: ^gpio4
uart_address: 0
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0                                         # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 81											

[stepper_y]
step_pin: gpio6
dir_pin: gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                       
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 113
position_max: 113
homing_speed: 38                                                   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
diag_pin: ^gpio3
uart_address: 2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0                                           # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle   												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 82												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
microsteps: 32
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: ^gpio25
#position_endstop: 118
position_max: 118
position_min: -1
homing_speed: 50   #Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
run_current: 0.6
sense_resistor: 0.110 
stealthchop_threshold: 0                                         

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: gpio14
dir_pin: !gpio13                                                     # Add ! if moving opposite direction
enable_pin: !gpio15
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8째 stepper motor, and set to 400 for OMC(StepperOnline) 0.9째 stepper motor
rotation_distance: 22.23                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
#heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: Generic 3950
#sensor_pin: gpio27
#control: pid                                                       
#pid_Kp: 53.942
#pid_Ki: 3.393
#pid_Kd: 214.412
min_temp: 0
max_temp: 300
min_extrude_temp: 170
max_extrude_only_distance: 100.0
max_extrude_cross_section: 50.0
pressure_advance: 0.07                                             
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                       

# [firmware_retraction]
# retract_length: 0.5
# retract_speed: 30

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
max_power: 0.9                                                    # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

#[heater_fan hotend_fan]
#pin: gpio18
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

#[fan]
#pin: gpio17
#max_power: 1.0
#kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
#off_below: 0.13
#cycle_time: 0.010

# [controller_fan hotend_fan_PI]
# pin: gpio20
# max_power: 1.0
# kick_start_time: 0.5
# heater: extruder
# heater_temp: 50.0
# fan_speed: 1.0 

[heater_fan hotend_fan_pi]
pin: gpio20
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0
fan_speed: 1.0

# [fan_generic case_fan]
# pin: gpio20
# max_power: 1.0
# kick_start_time: 0.5


#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3000

# [safe_z_home]
# home_xy_position: 60,60
# speed: 30.0
# z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 53,5
screw1_name: front screw
screw2: 5,99
screw2_name: back left
screw3: 100,99
screw3_name: back right

#####################################################################
# Neopixel
#####################################################################

[neopixel kirigami_rgb]
pin: gpio24
chain_count: 1
color_order: GRBW
initial_RED: 0.9
initial_GREEN: 0.9
initial_BLUE: 0.9

#####################################################################
#   V0 Display
#####################################################################
# [mcu display]
# serial:/dev/serial/by-id/usb-Klipper_stm32f042x6_130024000643303756353720-if00
# restart_method: command

# [display]
# lcd_type: sh1106
# i2c_mcu: display
# i2c_bus: i2c1a
# encoder_pins: ^display:PA4, ^display:PA3
# click_pin: ^!display:PA1
# kill_pin: ^!display:PA5
# x_offset: 2

# [neopixel displayStatus]
# pin: display:PA0
# chain_count: 1
# color_order: GRB
# initial_RED: 1.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0

# [menu __main __octoprint]
# type: disabled

# [neopixel display_led]
# pin: PA8
# color_order: GRB
# initial_RED: 0.5
# initial_GREEN: 0.5
# initial_BLUE: 0.5

#sda = pb9
#scl = pb8

# [neopixel displayStatus]
# pin: display:PA0
# chain_count: 1
# color_order: GRB
# initial_RED: 0.2
# initial_GREEN: 0.05
# initial_BLUE: 0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.493
#*# pid_ki = 2.415
#*# pid_kd = 430.490
#*#
#*# [stepper_z]
#*# position_endstop = 115.260
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 66.6
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 63.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.589
#*# pid_ki = 3.695
#*# pid_kd = 67.520
